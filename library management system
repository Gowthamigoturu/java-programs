import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Book {
    private String title;
    private String author;
    private String isbn;
    private boolean isAvailable;

    public Book(String title, String author, String isbn) {
        this.title = title;
        this.author = author;
        this.isbn = isbn;
        this.isAvailable = true;
    }

    public String getTitle() {
        return title;
    }

    public String getAuthor() {
        return author;
    }

    public String getIsbn() {
        return isbn;
    }

    public boolean isAvailable() {
        return isAvailable;
    }

    public void setAvailability(boolean availability) {
        isAvailable = availability;
    }
}

public class LibraryManagementSystem {
    private List<Book> books;
    private Scanner scanner;

    public LibraryManagementSystem() {
        this.books = new ArrayList<>();
        this.scanner = new Scanner(System.in);
    }

    public void addBook() {
        System.out.print("Enter book title: ");
        String title = scanner.nextLine();
        System.out.print("Enter book author: ");
        String author = scanner.nextLine();
        System.out.print("Enter book ISBN: ");
        String isbn = scanner.nextLine();

        Book book = new Book(title, author, isbn);
        books.add(book);
        System.out.println("Book added successfully!");
    }

    public void searchBook() {
        System.out.print("Enter book title or ISBN: ");
        String query = scanner.nextLine();

        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(query) || book.getIsbn().equals(query)) {
                System.out.println("Book found!");
                System.out.println("Title: " + book.getTitle());
                System.out.println("Author: " + book.getAuthor());
                System.out.println("ISBN: " + book.getIsbn());
                System.out.println("Availability: " + (book.isAvailable() ? "Available" : "Not Available"));
                return;
            }
        }
        System.out.println("Book not found!");
    }

    public void borrowBook() {
        System.out.print("Enter book title or ISBN: ");
        String query = scanner.nextLine();

        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(query) || book.getIsbn().equals(query)) {
                if (book.isAvailable()) {
                    book.setAvailability(false);
                    System.out.println("Book borrowed successfully!");
                } else {
                    System.out.println("Book is not available!");
                }
                return;
            }
        }
        System.out.println("Book not found!");
    }

    public void returnBook() {
        System.out.print("Enter book title or ISBN: ");
        String query = scanner.nextLine();

        for (Book book : books) {
            if (book.getTitle().equalsIgnoreCase(query) || book.getIsbn().equals(query)) {
                book.setAvailability(true);
                System.out.println("Book returned successfully!");
                return;
            }
        }
        System.out.println("Book not found!");
    }

    public void displayBooks() {
        if (books.isEmpty()) {
            System.out.println("No books in the library!");
        } else {
            for (Book book : books) {
                System.out.println("Title: " + book.getTitle());
                System.out.println("Author: " + book.getAuthor());
                System.out.println("ISBN: " + book.getIsbn());
                System.out.println("Availability: " + (book.isAvailable() ? "Available" : "Not Available"));
                System.out.println();
            }
        }
    }

    public void run() {
        while (true) {
            System.out.println("Library Management System");
            System.out.println("1. Add book");
            System.out.println("2. Search book");
            System.out.println("3. Borrow book");
            System.out.println("4. Return book");
            System.out.println("5. Display books");
            System.out.println("6. Exit");

            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume newline left-over

            switch (choice) {
                case 1:
                    addBook();
                    break;
                case 2:
                    searchBook();
                    break;
                case 3:
                    borrowBook();
                    break;
                case 4:
                    returnBook();
                    break;
                case 5:
                    displayBooks();
                    break;
                case 6:
                    System.out.println("Exiting...");
                    return;
                default:
                    System.out.println("Invalid choice!");
            }
        }
    }

    public static void main(String[] args) {
        LibraryManagementSystem library = new LibraryManagementSystem();
        library.run();
    }
}

